patch-package
--- a/node_modules/twitch-js/lib/client.js
+++ b/node_modules/twitch-js/lib/client.js
@@ -209,6 +209,8 @@ client.prototype.handleMessage = function handleMessage(message) {

         // https://github.com/justintv/Twitch-API/blob/master/chat/capabilities.md#notice
         case 'NOTICE':
+          this.emit('notices', channel, msgid, msg);
+
           switch (msgid) {
             // This room is now in subscribers-only mode.
             case 'subs_on':
@@ -572,6 +574,8 @@ client.prototype.handleMessage = function handleMessage(message) {
         // Handle subanniversary / resub..
         case 'USERNOTICE':
           {
+            this.emit('usernotices', channel, msgid, msg, message.tags);
+
             if (msgid === 'resub') {
               var username = message.tags['display-name'] || message.tags.login;
               var plan = message.tags['msg-param-sub-plan'];
@@ -582,7 +586,11 @@ client.prototype.handleMessage = function handleMessage(message) {
                 '\\r': '\r',
                 '\\n': '\n'
               });
-              var months = _.get(~~message.tags['msg-param-months'], null);
+
+              var shouldShareStreak = message.tags['msg-param-should-share-streak'] == 1;
+              var months = _.get(~~message.tags['msg-param-cumulative-months'], null);
+              var monthsStreak = shouldShareStreak ? _.get(~~message.tags['msg-param-streak-months'], null) : null;
+
               var prime = plan.includes('Prime');
               var userstate = message.tags;

@@ -590,7 +598,7 @@ client.prototype.handleMessage = function handleMessage(message) {
                 userstate['message-type'] = 'resub';
               }

-              this.emits(['resub', 'subanniversary'], [[channel, username, months, msg, userstate, { prime: prime, plan: plan, planName: planName }], [channel, username, months, msg, userstate, { prime: prime, plan: plan, planName: planName }]]);
+              this.emits(['resub', 'subanniversary'], [[channel, username, months, msg, userstate, { prime: prime, plan: plan, planName: planName }, monthsStreak], [channel, username, months, msg, userstate, { prime: prime, plan: plan, planName: planName }, monthsStreak]]);
             } else if (msgid === 'sub') {
               // Handle sub
               var _username = message.tags['display-name'] || message.tags.login;
@@ -652,6 +660,14 @@ client.prototype.handleMessage = function handleMessage(message) {
             break;
           }

+        // Single message removal on a channel.
+        case 'CLEARMSG':
+          var id = message.tags['target-msg-id'];
+          var login = message.tags.login;
+
+          this.emit('messagedeleted', channel, id, login, msg);
+          break;
+
         // Channel is now hosting another channel or exited host mode..
         case 'HOSTTARGET':
           // Stopped hosting..
@@ -935,7 +951,7 @@ client.prototype.handleMessage = function handleMessage(message) {
               message.tags['message-type'] = 'chat';
               this.log.info('[' + channel + '] <' + message.tags.username + '>: ' + msg);

-              this.emits(['chat', 'message'], [[channel, message.tags, msg, false], [channel, message.tags, msg, false]]);
+              this.emits(['chat', 'message'], [[channel, message.tags, msg, false, msgid], [channel, message.tags, msg, false, msgid]]);
             }
           }
           break;
@@ -1212,6 +1228,8 @@ client.prototype._updateEmoteset = function _updateEmoteset(sets) {
     if (!err) {
       _this8.emotesets = body.emoticon_sets || {};
       return _this8.emit('emotesets', sets, _this8.emotesets);
+    } else {
+      return _this8.emit('emotesets', sets, {});
     }
     setTimeout(function () {
       _this8._updateEmoteset(sets);
